webpackHotUpdate(0,{

/***/ 127:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vuex__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_models_Question__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_common_icon_Icon__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_common_icon_Icon___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_common_icon_Icon__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_api__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_lodash__ = __webpack_require__(61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_lodash__);\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  name: 'questions',\n  props: [],\n  data: function data() {\n    return {\n      currentQuestion: new __WEBPACK_IMPORTED_MODULE_3_models_Question__[\"a\" /* default */](),\n      happiness: 3,\n      money: 0,\n      gameSettings: {},\n      isTransitioned: true,\n      user: localStorage.getItem('glovo_game_user') ? localStorage.getItem('glovo_game_user') : {\n        name: '',\n        score: undefined,\n        id: new Date().getTime()\n      },\n      answerMoney: 0,\n      answerHappiness: 0\n    };\n  },\n  mounted: function mounted() {\n    console.log(this.user);\n    var ctx = this;\n    this.isTransitioned = true;\n    __WEBPACK_IMPORTED_MODULE_5_api__[\"c\" /* settings */].get().then(function (_settings) {\n      ctx.gameSettings = _settings;\n    });\n    this.nextQuestion(this.settings).then(function (response) {\n      ctx.currentQuestion.parse(response.question);\n      ctx.isTransitioned = false;\n    });\n  },\n\n  computed: __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"c\" /* mapGetters */])(['settings'])),\n  methods: __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"a\" /* mapActions */])(['nextQuestion', 'updateSettings', 'updateSettingsBySettings']), {\n    goToNext: function goToNext(answer) {\n      if (this.currentQuestion.range === 5) {\n        console.log('Im in the 5 stage', this.user.score, !this.user.score || this.user.score < this.money);\n        if (!this.user.score || this.user.score < this.money) {\n          console.log('Im inside user score');\n          var _user = {\n            name: this.user.name,\n            score: this.money,\n            id: this.user.id\n          };\n          localStorage.setItem('glovo_game_user', __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(_user));\n          this.$firebase.database().ref('players/' + _user.id).set(_user);\n          this.$router.push('bestScored');\n        }\n      }\n      this.answerMoney = answer.money;\n      this.answerHappiness = answer.happiness;\n      this.isTransitioned = true;\n      var ctx = this;\n      answer.current_stage = ctx.currentQuestion.range;\n      ctx.updateSettings(answer).then(function () {\n        var tempHappiness = Math.floor(ctx.settings.happiness / 10);\n        if (tempHappiness > 5) {\n          ctx.happiness = 5;\n        } else if (tempHappiness < 0) {\n          ctx.happiness = 0;\n        } else {\n          ctx.happiness = tempHappiness;\n        }\n        ctx.money = ctx.settings.money;\n        ctx.nextQuestion(ctx.settings).then(function (response) {\n          ctx.currentQuestion.parse(response.question);\n          ctx.updateSettingsBySettings(response.settings);\n          __WEBPACK_IMPORTED_MODULE_6_lodash___default.a.debounce(function (ctx) {\n            ctx.isTransitioned = false;\n          }, 600)(ctx);\n        });\n      });\n    }\n  }),\n  component: {\n    Icon: __WEBPACK_IMPORTED_MODULE_4_common_icon_Icon___default.a\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })

})